# Задние 1: Создать три переменные с одинаковыми данными и одинаковыми идентификаторами
# Целык числа
number1 = 256
number2 = 256
number3 = 256
print(f'Значение переменных 1 - {number1}, 2 - {number2}, 3 - {number3}')
print(f'Идентификатор первого числа: {id(number1)}\nИдентификатор второго числа: {id(number2)}\n'
      f'Идентифкатор третьего числа: {id(number3)}\n'
      f'Проверка на равенство: {id(number1) == id(number2) == id(number3)} ')
print('-----------------------------')
number1 = int(input('Введите целое число:'))
number2 = number1
number3 = number2
print(f'Значение переменных 1 - {number1}, 2 - {number2}, 3 - {number3}')
print(f'Идентификатор первого числа: {id(number1)}\nИдентификатор второго числа: {id(number2)}\n'
      f'Идентифкатор третьего числа: {id(number3)}\n'
      f'Проверка на равенство: {id(number1) == id(number2) == id(number3)} ')
print('-----------------------------------')
# Вещественные числа
number1 = float(input('Введите вещественное число:'))
number2 = number1
number3 = number2
print(f'Значение переменных 1 - {number1}, 2 - {number2}, 3 - {number3}')
print(f'Идентификатор первой переменной: {id(number1)}\nИдентификатор второй переменной: {id(number2)}\n'
      f'Идентифкатор третьей переменной: {id(number3)}\n'
      f'Проверка на равенство: {id(number1) == id(number2) == id(number3)} ')
print('------------------------')

# Задание 2: Создать две переменные с одинаковыми данными разными идентификаторами
my_list1 = [1, 2, 3]
my_list2 = my_list1[:]
my_list3 = [1, 3, 2]
print(f'Идентификатор первого числа: {id(my_list1)}\nИдентификатор второго числа: {id(my_list2)}\n'
      f'Идентифкатор третьего числа: {id(my_list3)}\n'
      f'Проверка на равенство: {id(my_list1) == id(my_list2) == id(my_list3)} ')

# Идентификаторы списка различные при этом идентификаторы на одинковые значения в списке оинаковые
print('-------------------------')
number1 = my_list1[1]
number2 = my_list2[1]
number3 = my_list3[2]
print(f'Идентификатор числа 2 в первом списке: {id(number1)}\nИдентификатор числа 2 во втором списке: {id(number2)}\n'
      f'Идентифкатор числа 2 в третьем списке: {id(number3)}\n'
      f'Проверка на равенство: {id(number1) == id(number2) == id(number3)} ')
print('---------')

# Задание 3. Изменить тип  чтобы идентификаторы первого задания были отличны, идентификаторы второго задания
# были эдентичны

number1 = '256'
number2 = '256'
number3 = '256'
print(f'Значение переменных 1 - {number1}, 2 - {number2}, 3 - {number3}')
print(f'Идентификатор первой строки значение: {id(number1)}\nИдентификатор второой строки: {id(number2)}\n'
      f'Идентифкатор третьей строки : {id(number3)}\n'
      f'Проверка на равенство: {id(number1) == id(number2) == id(number3)} ')
print('-----------------------------')

number1 = ''.join(number1)
number2 = ''.join(number2)
number3 = ''.join(number3)
print(f'Значение переменных 1 - {number1}, 2 - {number2}, 3 - {number3}')
print(f'Идентификатор первого числа: {id(number1)}\nИдентификатор второго числа: {id(number2)}\n'
      f'Идентифкатор третьего числа: {id(number3)}\n'
      f'Проверка на равенство: {id(number1) == id(number2) == id(number3)} ')
print('--------------------------')

my_list1 = [1, 2, 3]
my_list2 = my_list1[:]
my_list3 = [1, 2, 3]
print(f'Значение переменных 1 - {my_list1}, 2 - {my_list2}, 3 - {my_list3}')
print(f'Идентификатор первого числа: {id(my_list1)}\nИдентификатор второго числа: {id(my_list2)}\n'
      f'Идентифкатор третьего числа: {id(my_list3)}\n'
      f'Проверка на равенство: {id(my_list1) == id(my_list2) == id(my_list3)} ')

my_list1 = tuple(my_list1)
my_list2 = my_list1
my_list3 = my_list2
print(f'Значение переменных 1 - {my_list1}, 2 - {my_list2}, 3 - {my_list3}')
print(f'Идентификатор первого числа: {id(my_list1)}\nИдентификатор второго числа: {id(my_list2)}\n'
      f'Идентифкатор третьего числа: {id(my_list3)}\n'
      f'Проверка на равенство: {id(my_list1) == id(my_list2) == id(my_list3)} ')
print('------------------------')

# Задание 4: Программа запрашивает ввести произвольную строку. Затем необходимо создать две строковые переменные,
# первая состоит только из четных символов веденной строки, а вторая только из не четных.
# 1. Вывести введенную строку без начальных и завершающих пробелов в формате Введена строка: 'введенная строка'
# 2. Сделать два отступа используя предыдущий print, обе переменные вывести в однустроку разделяя их между собой пятью
# пробелами, закончить вывод переводом строки и тремя восклицательными знаками
#
# Определение четности числа по коду ascii

my_string = input('Введите произвольную строку:')
even_str = ''
odd_str = ''
for i in my_string:
    if ord(i) % 2 == 0:
        even_str += i
    else:
        odd_str += i
print(f'Введена строка: {my_string.strip()}',  end='  ')
print(even_str.strip(), odd_str.strip(), sep='     ', end= '\n!!!')
# Определение четности числа по индексу в строке
my_string = input('\nВведите произвольную строку: ')
even_str = ''
odd_str = ''
for i in range(len(my_string)):
    if i % 2 == 0:
        even_str += my_string[i]
    else:
        odd_str += my_string[i]
print(f'Введена строка: {my_string.strip()}',  end='  ')
print(even_str.strip(), odd_str.strip(), sep='     ', end= '\n!!!')

# Задание 5
# Пусть у нас есть три переменные:
# a = 1
# b = 2
# c = 3
# Нужно, используя распаковку кортежа, поменять местами значения переменных a и b, а потом b и c.
# Вариант 1
num_a = 1
num_b = 2
num_c = 3
print(f'Значение пременных до перестановки: а = {num_a}, b = {num_b}, c = {num_c}')
num_a, num_b, num_c = num_b, num_c, num_a
print(f'Значение пременных после перестановки: а = {num_a}, b = {num_b}, c = {num_c}')
# Вариант 2
num_a = 1
num_b = 2
num_c = 3
print(f'Значение пременных до перестановки: а = {num_a}, b = {num_b}, c = {num_c}')
num_a, num_b = num_b, num_a
num_b, num_c = num_c, num_b
print(f'Значение пременных после перестановки: а = {num_a}, b = {num_b}, c = {num_c}')

#Задание 6
# Пусть у нас есть словарь, где ключ это страна, а значение - столица:
# countries_capitals = {
#     'Belarus': 'Minsk',
#     'Poland': 'Warsaw',
#     'Great Britain': 'London',
# }
# Нужно вывести на экран, используя словарь, столицу Польши, а на следующей строке столицу Беларуси
print('---------------------------')
countries_capitals = {
    'Belarus': 'Minsk',
    'Poland': 'Warsaw',
    'Great Britain': 'London'
}
# Вывод на печать странны введенной пользователем если значение есть в словаре
country = input('Введите страну: ')
print(countries_capitals.get(country, 'Введенной строны нет в списке', ))
print(countries_capitals.setdefault(countries_capitals.get(country, country), input('Введите ее сталицу') ))
print(countries_capitals)

#Вывод на печать столицы Польши и Беларуси
print('---------------------------')
print(countries_capitals['Poland'], countries_capitals['Belarus'], sep='\n')

# Задание 7
# Пусть у нас есть массив слов food = ['котлета', 'пюрешка', 'драники', 'пицца', 'мороженное'].
# Вывести на консоль два блюда, которые больше всего нравятся, в формате:
# 'Из предложенного я больше люблю <блюдо1> и <блюдо2>'
food = ['котлета', 'пюрешка', 'драники', 'пицца', 'мороженное']
print(f'Из предложенного я больше всего люблю {food[2]} и {food[-1]}')


# Задание 8
# Пусть в программе хранится список друзей:
# friends = ['Egor', 'Liza', 'Vanya', 'Yana']
# При запуске программа просит ввести имя, и проверяет, есть ли оно в списке.
# Если есть, вывести сообщение 'У меня есть друг <имя>',
# если нет, вывести 'У меня нет друга с именем <имя>'.
friends = ['Egor', 'Liza', 'Vanya', 'Yana']
name = input('Введите имя друга: ')
if name in friends:
    print(f'У меня есть друг {name}')
else:
    print(f'У меня нет друга с именем {name} \nДобавить новое Имя {name} в список друзей')
    answer = input('y\\n')
    if answer == 'y':
        friends.append(name)
        print(f'Обновленный список друзеей {friends}')
    else:
        print('Приятного дня')

# Задание 9
#Дополнительно подумать, какой еще тип данных будет оптимальнее использовать в этой задаче для хранения имен друзей

# Можно использовать тип set он быстрее осуществляет поиск в множестве т.к у него отсутсвуют индексы