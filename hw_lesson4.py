# 0
# Доделать задания 2 и 3 из прошлого дз
# - сделал, решение в hw_lessson3.py
# 1
# Завернуть код из первой задачи прошлого домашнего задания в вечный цикл.
# O(1) сложность алгоритма постоянная т.к в не зависимости от размера входных данных,
# алгоритм осуществляет вывод на экран значение веденных переменных
#------------------
# while True:
#     name = input('Enter your name: ')
#     age = int(input('Enter you age: '))
#     if age > 18:
#         print(f'"Приветсвую {name}! У вас есть доуступ к взрослому контенту."')
#     elif age < 18:
#         print(f'"Приветсвую {name}! У вас нет доуступ к взрослому контенту."')
#     else:
#         print(f'"Приветсвую {name}! Поздравляю с совершеннолетием! '
#               f'У вас нет доуступ к взрослому контенту."')
#----------------------
# 2
# Написать программу, используя функции input() и print().
# Программа запрашивает ввести произвольную строку.
# Затем необходимо создать 2 строковые переменные,
# первая из которых состоит только из чётных символов введённой строки,
# а вторая только из не чётных (сделать это двумя способами: через слайсы и через цикл).
# Вначале вывести введённую строку без начальных и завершающих пробелов
# в формате "Введена строка <введённая строка>”.
# Сделать 2 отступа (используя аргументы функции print)
# и затем обе переменные вывести одной функцией print, разделяя их между собой пятью
# пробелами и закончить вывод переводом строки и тремя восклицательными знаками.
#----------------------------
default_str = input('Enter default string: ')
even_str = ''
odd_str = ''
#------------------
# Заполнение строковой переменной с использованием среза строки и заданным шагом
#сложность алгоритма O(n) n - зависит от длинны строки. Для выполнения обоих условий нам придется вывести сначала
# четные элементы, а затем не четные по итогу для получения обоих результатов придеться пройти всю строку
#----------------
# even_str += default_str[::2]
# odd_str += default_str[1::2]
#------------------
#Заполнение строковых переменных с использованием цикла for
#сложность алгоритма O(n) - т.к в зависимости от длинны входной строки нам придется циклом пройти от начала
#до конца определяя индекс каждого символа
#-----------------------------------
for index_, symbol in enumerate(default_str):
    if index_ % 2 == 0:
        even_str += symbol
    else:
        odd_str += symbol
print(f'Введена строка: {default_str.strip()}', '  ', end='')
print(f'{even_str.strip()}     {odd_str.strip()}', end='\n!!!')
#-------------------------------------
# 3*
# Сделать программу, в которой нужно будет угадывать число
# Программа O(log n) - при введенной не правильной попытке мы даем подсказку в какой из двух половин находиться
# заявленное число, тем самым уменьшаем вероятность худшего сценария на 2
#---------------------------
# import random
# find_range = input('Enter 2 number for range: ').split()
# answer_int = int(input(f'Please enter number {find_range[0]} - {find_range[1]} '))
# number = random.randint(int(find_range[0]), int(find_range[1]))
# while True:
#     if (int(find_range[0]) > answer_int) or (answer_int > int(find_range[1])):
#         print(f'Number {answer_int} out of range {find_range[0]} - {find_range[1]}')
#         break
#     if answer_int == number:
#         print('You win')
#         break
#     elif answer_int != number and number <= int(find_range[1]) // 2:
#         print('You lose. Number in first hulf:')
#         answer_int = int(input(f'Please enter number {find_range[0]} - {find_range[1]} '))
#     elif answer_int != number and number > int(find_range[1]) // 2:
#         print('You lose. Number in second hulf:')
#         answer_int = int(input(f'Please enter number {find_range[0]} - {find_range[1]} '))
#----------------------------
# 4*
# Ввести строку (считаем, что в начале и в конце строки нет пробелов,
# все слова в строке разделены одним пробелом). Для введенной строки
# изменить порядок символов в каждом слове в предложении,
# сохраняя при этом пробелы и первоначальный порядок слов.
# Примеры:
# "Hello World!" -> "olleH !dlroW"
# "Let's see, how it works" -> "s'teL ,ees woh ti skrow"

# Алгоритм О(n) - чем длиенее строка тем боле получиться элементов списка и тем больше раз придеться запускать цикл for
list_string = input('Enter string: ').split()
#print(list_string)
for element in list_string:
    # вариант испольуя срезы
    print(element[::-1], end=' ')
    # # вариант с использованием функции reversed
    # print(*reversed(element), sep='', end=' ')

